$Day1 =  get-date -UFormat %d
$resourceGroupName = "analytics$Day1"
$location = "West Europe"
$storageAccountName = "s$resourceGroupName"
$containerName = "hdp$resourceGroupName"
$clusterName = $containerName
$clusterNodes = 2
$httpUserName = "hduser"
$sshUserName = "sshuser"
$password = ConvertTo-SecureString "Oct26@2017" -AsPlainText -Force

Login-AzureRmAccount

# Create a resource group
New-AzureRmResourceGroup -Name $resourceGroupName -Location $location

# Create a storage account
Write-Host "Creating storage account..."
New-AzureRmStorageAccount -Name $storageAccountName -ResourceGroupName $resourceGroupName -Type "Standard_GRS" -Location $location

# Create a Blob storage container
Write-Host "Creating container..."
$storageAccountKey = (Get-AzureRmStorageAccountKey -ResourceGroupName $resourceGroupName -Name $storageAccountName)[0].Value

$destContext = New-AzureStorageContext -StorageAccountName $storageAccountName -StorageAccountKey $storageAccountKey
New-AzureStorageContainer -Name $containerName -Context $destContext

# Create a cluster
Write-Host "Creating HDInsight cluster..."
$httpCredential = New-Object System.Management.Automation.PSCredential ($httpUserName, $password)
$sshCredential = New-Object System.Management.Automation.PSCredential ($sshUserName, $password)
New-AzureRmHDInsightCluster -ResourceGroupName $resourceGroupName -ClusterName $clusterName -ClusterType Hadoop -Version 3.5 -Location $location -DefaultStorageAccountName "$storageAccountName.blob.core.windows.net" -DefaultStorageAccountKey $storageAccountKey -DefaultStorageContainer $containerName -ClusterSizeInNodes $clusterNodes -OSType Linux -HttpCredential $httpCredential -SshCredential $sshCredential
Write-Host "Finished!"


$resourceGroupName = "12345ps"
$storageAccountName = "s$resourceGroupName"
$containerName = "hdp$resourceGroupName"
$clusterName = $containerName
$httpUserName = "hduser"
$password = ConvertTo-SecureString "MyPa`$`$w0rd" -AsPlainText -Force
$credential = New-Object System.Management.Automation.PSCredential ($httpUserName, $password)

# Upload source data
$storageAccountKey = (Get-AzureRmStorageAccountKey -ResourceGroupName $resourceGroupName -Name $storageAccountName)[0].Value
$blobContext = New-AzureStorageContext -StorageAccountName $storageAccountName -StorageAccountKey $storageAccountKey
Set-AzureStorageBlobContent -File c:\files\treasure-island.txt -Context $blobContext -Container $containerName -Blob data/treasure-island.txt -Force

# Run a Map/Reduce job
$jobDef = New-AzureRmHDInsightMapReduceJobDefinition -JarFile "/example/jars/hadoop-mapreduce-examples.jar" -ClassName "wordcount" -Arguments "/data/treasure-island.txt", "/data/output" -StatusFolder "status"
$wordCountJob = Start-AzureRmHDInsightJob –ClusterName $clusterName –JobDefinition $jobDef -ResourceGroupName $resourceGroupName -HttpCredential $credential
Write-Host "Map/Reduce job submitted..."
 
# Wait, and then display job output information
Wait-AzureRmHDInsightJob -JobId $wordCountJob.JobId -ResourceGroupName $resourceGroupName -ClusterName $clusterName -HttpCredential $credential
Get-AzureRmHDInsightJobOutput -ClusterName $clusterName -JobId $wordCountJob.JobId -ResourceGroupName $resourceGroupName -HttpCredential $credential -DefaultStorageAccountName $storageAccountName -DefaultContainer $containerName -DefaultStorageAccountKey $storageAccountKey

# Download output file
Write-Host "Downloading results..."
Get-AzureStorageBlobContent -Context $blobContext -Container $containerName -Blob data/output/part-r-00000 -Destination "C:\files"
dir c:\files\data\output\part-r-00000
